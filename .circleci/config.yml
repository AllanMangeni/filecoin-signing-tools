version: 2.1

commands:
  restore-sccache-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-stable-{{ arch }}
#          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-sccache-cache:
    steps:
      - save_cache:
          name: Save sccache cache
#          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          key: sccache-cache-stable-{{ arch }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

jobs:
  build:
    docker:
      - image: zondax/rust-ci:latest
    steps:
      - checkout
      - restore-sccache-cache
      - run:
          name: rustfmt
          command: |
            cargo fmt --version
            cargo fmt -- --check
      - run:
          name: clippy
          command: |
            cargo clippy --version
            cargo clippy --all-features
      - run:
          name: audit
          command: |
            cargo audit --version
            cargo audit
      - save-sccache-cache

  tests_rust:
    docker:
      - image: zondax/rust-ci:latest
    steps:
      - checkout
      - restore-sccache-cache
      - run:
          name: test --all-features
          command: |
            rustc --version
            cargo --version
            cargo test --lib --all-features
      # No need to save this in cache

  tests_wasm:
    docker:
      - image: zondax/rust-ci:latest
    steps:
      - checkout
      - restore-sccache-cache
      - run:
          name: build wasm
          command: |
            make deps_wasm
            make build_wasm
            make link_wasm
      - run:
          name: run tests
          command: |
            make test_wasm
      # No need to save this in cache

  tests_service:
    docker:
      - image: zondax/rust-ci:latest
    steps:
      - checkout
      - restore-sccache-cache
      - run: cargo build
      - run:
          name: start service
          background: true
          command: |
            cargo run -- start
      - run:
          name: install node dependencies
          command: |
            cd examples/jsonrpc
            yarn install
      - run: ls .circleci
      - run:
          name: wait for service to be available
          command: .circleci/wait_for_port.sh 3030
      - run:
          name: run jsonrpc tests
          command: |
            cd examples/jsonrpc
            yarn run test:unit
            yarn run test:integration
      # No need to save this in cache

workflows:
  build_all:
    jobs:
      - build
      - tests_rust:
          requires:
            - build
      - tests_wasm:
          requires:
            - build
      - tests_service:
          requires:
            - build

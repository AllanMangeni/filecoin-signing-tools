version: 2.1

commands:
  setup-sccache:
    steps:
      - run:
          name: Install sccache
          command: |
            cargo install sccache
            sccache --version
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
  restore-sccache-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-sccache-cache:
    steps:
      - save_cache:
          name: Save sccache cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

jobs:
  build:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - setup-sccache
      - restore-sccache-cache
      - run: rustup component add clippy
      - run: cargo install cargo-audit
      - run:
          name: rustfmt
          command: |
            cargo fmt --version
            cargo fmt -- --check
      - run:
          name: build
          command: |
            rustc --version
            cargo --version
            cargo build
      - run:
          name: clippy
          command: |
            cargo clippy --version
            cargo clippy --all-features
      - run:
          name: audit
          command: |
            cargo audit --version
            cargo audit
      - save-sccache-cache

  tests_rust:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - setup-sccache
      - restore-sccache-cache
      - run:
          name: test --all-features
          command: |
            rustc --version
            cargo --version
            cargo test --lib --all-features
      - save-sccache-cache

  tests_wasm:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - setup-sccache
      - restore-sccache-cache

      - run:
          name: install node + yarn + n
          command: |
            sudo apt install nodejs
            sudo curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt update && sudo apt install yarn
            sudo yarn global add n
            sudo n latest -q
      - run:
          name: install node + yarn + n
          command: |
            make deps
            make build_wasm
            make link_wasm
            make test_wasm

      - save-sccache-cache

workflows:
  version: 2
  build_all:
    jobs:
      - build
      - tests_rust:
          requires:
            - build
      - tests_wasm:
          requires:
            - build
